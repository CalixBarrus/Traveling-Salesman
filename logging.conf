; This logging config file controls all the loggers in this
; library. Logging statements can easily be enabled or disabled by tweaking
; the 'level' parameter in logger_root or logger_tsp.

; At the top of any file that would include logging include the following code:
; # Set up logger
; logging.config.fileConfig("./logging.conf")
; logger = logging.getLogger(__name__)

; Note that this logging file is in the current directory. For files deeper in the
; project, the file name "./logging.conf" may  need to be tweaked.

; As a result of the "__name__" naming convention, all loggers will
; descend from either the root logger (in the module being run as
; __main__) or the tsp logger (all other modules)

; Reference: https://docs.python.org/3/howto/logging.html

[loggers]
keys=root, tsp

[handlers]
keys=consoleHandler

[formatters]
keys=simpleFormatter

[logger_root]; Used for the main module
level=DEBUG
handlers=consoleHandler

[logger_tsp]; All other modules will be descendants of this logger
level=DEBUG
handlers=consoleHandler
qualname=tsp
; Propogate this makes it so tsp doesn't also pass logs to root
propagate=0

; [logger_simpleExample]
; level=DEBUG
; handlers=consoleHandler
; qualname=simpleExample
; propagate=0

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=